name: master_build
on: [push]

jobs:

  # 
  # /home/logic/_workspace/github-playlist/action-pipenv-failed-tryout/build.yml
  # 
  action_pipenv_failed_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: action-pipenv-failed-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd action-pipenv-failed-tryout
            pipenv sync
            pipenv run python3 ./fail.py
  
  # 
  # /home/logic/_workspace/github-playlist/action-secrets-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
  action_secrets_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: action-secrets-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          echo 'helloworld'
          node --version
          npm -v
          yarn -v
  
  # 
  # /home/logic/_workspace/github-playlist/action-slack-custom-message-tryout/build.yml
  # 
  action_slack_custom_message_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: action-slack-custom-message-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          echo 'helloworld'
          node --version
          npm -v
          yarn -v
  
  # 
  # /home/logic/_workspace/github-playlist/action-upload-artifact-tryout/build.yml
  # 
  action_upload_artifact_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: action-upload-artifact-tryout
        uses: actions/upload-artifact@v2
        with:
          name: 'upload-artifact-tryout'
          path: action-upload-artifact-tryout/helloworld
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-docker-container-tryout/build.yml
  # 
  # github_actions_docker_container:
  #   runs-on: ubuntu-latest
  #   container: node:10.16-jessie
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: github_actions_docker_container
  #       env: # Or as an environment variable
  #         SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  #       run: |
  #         echo 'helloworld'
  #         hostname
  #         node -v
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-helloworld-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  # https://github.com/sdras/awesome-actions
  
  github_actions_helloworld_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: github-actions-helloworld-tryout
        uses: actions/checkout@v2
  
      - name: github-actions-helloworld-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'helloworld'
          node --version
          npm -v
          yarn -v
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-multistage-tryout/build.yml
  # 
  github-actions-multistage-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: github-actions-multistage-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          echo 'helloworld'
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-puppeteer-tryout/build.yml
  # 
  puppeteer_helloworld:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: github-actions-puppeteer-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          cd github-actions-puppeteer-tryout
            sudo npm install -g concurrently live-server
            yarn
            concurrently -s first -k "live-server --no-browser ." "node index.js"
          cd ..
  
  # 
  # /home/logic/_workspace/github-playlist/github-environ-tryout/build.yml
  # 
  github_environ_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: Hello world
        run: |
          echo $CI
          echo $HOME
          echo $GITHUB_WORKFLOW
          echo $GITHUB_RUN_ID
          echo $GITHUB_RUN_NUMBER
          echo $GITHUB_ACTION
          echo $GITHUB_ACTIONS
          echo $GITHUB_ACTOR
          echo $GITHUB_REPOSITORY
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_EVENT_PATH
          echo $GITHUB_WORKSPACE
          echo $GITHUB_SHA
          echo $GITHUB_REF
          echo $GITHUB_HEAD_REF
          echo $GITHUB_BASE_REF
          echo $GITHUB_SERVER_URL
          echo $GITHUB_API_URL
          echo $GITHUB_GRAPHQL_URL
  
  # 
  # /home/logic/_workspace/github-playlist/python-helloworld-tryout/build.yml
  # 
  python_helloworld_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test python helloworld
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd python-helloworld-tryout
            pipenv sync
            pipenv run python3 ./helloworld.py
  
  

  # 
  # /home/logic/_workspace/github-playlist/github-build-merger-tryout/subjob.yml
  # 
  test_merger:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run test
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          pipenv --help
          github-build-merger-tryout/test.sh
  
  merge:
    needs: [test_merger, action_pipenv_failed_tryout, github-actions-multistage-tryout, action_slack_custom_message_tryout, puppeteer_helloworld, github_actions_helloworld_tryout, action_secrets_tryout, action_upload_artifact_tryout, github_environ_tryout, python_helloworld_tryout]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run merge
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd github-build-merger-tryout
            pipenv sync
  
            pipenv run python3 ./merge.py
          cd ..
  
  
