name: Android Emulator Test

on: [push, pull_request]

jobs:
  build:
    name: Mobile Chrome Test
    runs-on: macOS-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v1
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.16.3'


      - name: Run Android Emulator A
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'

          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator_a -k 'system-images;android-27;google_apis;x86' --force
          echo $ANDROID_HOME/emulator/emulator -list-avds

          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator_a -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'


          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator_b -k 'system-images;android-27;google_apis;x86' --force
          echo $ANDROID_HOME/emulator/emulator -list-avds

          nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator_b -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"

          adb devices -l

      - name: Set up Appium
        run: npm install appium@1.15.0
      - name: Run Appium Server
        run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
      - name: Build with Gradle
        run: gradle cleanTest test --tests "com.example.chrome.MobileChromeTest"
        continue-on-error: true

      - name: check python version
        run: |
          python3 -V
          python3 -m pip install pip --upgrade
          python3 -m pip install pipenv
          pipenv --version

      - name: python appium test
        run: |
          echo 'start python appium test'
          pushd github-android-emulator-tryout
            pipenv sync
            pipenv run python3 appium-helloworld.py
          popd

      - name: Upload logs
        uses: actions/upload-artifact@v1
        with:
          name: appium.log
          path: appium.log

      - name: Upload screenshots
        uses: actions/upload-artifact@v1
        with:
          name: screenshots
          path: github-android-emulator-tryout/screens
