# https://medium.com/@sandeepqaops/setting-up-github-actions-for-react-native-mobile-app-for-ios-simulator-with-appium-96890c7bb303
# Pre-Commit E2E Tests in iOS
name: ios-emulator-test
# Controls when the action will run.
on:
  push:
    branches:
      - test/ios-version-test-*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup Node JS - 10.17.0
      - name: Set up Node JS 10.17.0
        uses: actions/setup-node@v1
        with:
          node-version: '10.17.0'
      # Clean Packages & Install Dependencies
      - name: Clean Packages
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
      # Install React Native CLI
      - name: Install React Native CLI
        run: |
          npm install react-native-cli
      # List iOS Devices & Platforms
      - name: List iOS Devices & Platforms
        run: |
          xcrun simctl list
      # Install iOS 11.4 Runtime
      - name: Install iOS 11.4 Runtime
        run: |
          gem install xcode-install
          xcversion simulators --install='iOS 13.4'
      # Create and Boot iOS Emulator - iPhoneX on iOS 11.4, Update default appium config for iOS
      - name: Create and Run iOS Emulator - iPhoneX on iOS 11.4, Update default appium config for iOS
        run: |
          xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-11-4 > deviceid.txt
          DEVICEUUID=`cat deviceid.txt`
          echo $DEVICEUUID
          sed -i -e "s/{IPHONE_UUID}/$DEVICEUUID/g" __tests__/e2e/template_appium_configs_ios.js
          xcrun simctl boot $DEVICEUUID &
      # Use HTTPS repos
      - name: Use HTTPS repos
        run: |
          git config --global url."https://github".insteadOf ssh://git@github
      # Install Repo and Dependencies
      - name: Install Repo and Dependencies
        run: |
          cd github-actions-ios-emulator-tryout
            npm install --save-dev
          cd -
      # Start the Appium Server
      - name: Start the Appium Server
        run: |
          cd github-actions-ios-emulator-tryout
            ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &
          cd -
      # Poll for Appium Server to Start
      - name: Poll for Appium Server to Start
        run: |
          sleep 60

      - name: check python version
        run: |
          python3 -V
          python3 -m pip install pip --upgrade
          python3 -m pip install pipenv
          pipenv --version

      - name: python appium test
        run: |
          cd github-actions-ios-emulator-tryout
            echo 'start python appium test'
            pipenv sync
            pipenv run python3 appium-helloworld.py
          cd -

      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: screenshot
          path: github-actions-ios-emulator-tryout/screens

      # # Open Metro Bundler in Background
      # - name: Open Metro Bundler in Background
      #   run: |
      #     node_modules/react-native/scripts/launchPackager.command &
      # # Build iOS App and Run Tests
      # - name: Build iOS App and Run Tests
      #   env:
      #     E2E_TEST_PLATFORM: 'ios'
      #     E2E_TEST_DEFAULTS: 'true'
      #     E2E_TEST_TAGS: 'E2E'
      #   run: |
      #     react-native run-ios
      #     BUILT_APP=`find ~/Library/Developer/Xcode/DerivedData -name <APP_NAME>.app | grep Build/Products/Debug-iphonesimulator/<APP_NAME>.app`
      #     mkdir -p ios/build/<APP_NAME>/Build/Products/Debug-iphonesimulator
      #     cp -R $BUILT_APP ios/build/<APP_NAME>/Build/Products/Debug-iphonesimulator
      #     sleep 30
      #     npm run e2e-test

      # Upload Appium Logs
      # - name: Upload Appium logs
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: appium.log
      #     path: appium.log

      # Upload Test Results
      # - name: Upload Test Results
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: e2e-results
      #     path: __tests__/e2e/output