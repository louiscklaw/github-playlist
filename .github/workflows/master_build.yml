name: master_build
on:
  push:

jobs:

  # 
  # /home/logic/_workspace/github-playlist/action-secrets-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
  action_secrets_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - name: action-secrets-tryout
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
        run: |
          cd action-secrets-tryout
            ./decrypt_secret.sh
          cd ..
  
  
      - name: test-cat
        run: |
          cd action-secrets-tryout
            cat $HOME/secrets/my_secret.json
          cd ..
  
  
      - name: test-diff
        run: |
          cd action-secrets-tryout
            diff ./my_secret.json $HOME/secrets/my_secret.json
          cd ..
  
  # 
  # /home/logic/_workspace/github-playlist/action-slack-custom-message-tryout/build.yml
  # 
  action_slack_custom_message_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: action-slack-custom-message-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          echo 'helloworld'
          node --version
          npm -v
          yarn -v
  
  # 
  # /home/logic/_workspace/github-playlist/action-upload-artifact-tryout/build.yml
  # 
  action_upload_artifact_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: action-upload-artifact-tryout
        uses: actions/upload-artifact@v2
        with:
          name: 'upload-artifact-tryout'
          path: action-upload-artifact-tryout/helloworld
  
  # 
  # /home/logic/_workspace/github-playlist/actions-helloworld-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  # https://github.com/sdras/awesome-actions
  
  github_actions_helloworld_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: github-actions-helloworld-tryout
        uses: actions/checkout@v2
  
      - name: github-actions-helloworld-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'helloworld'
          node --version
          npm -v
          yarn -v
  
  # 
  # /home/logic/_workspace/github-playlist/actions-platform-tryout/build.yml
  # 
  
  build-linux:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2
  
    - run: |
        sudo apt-get install libxml2-utils   \
                              icnsutils       \
                              graphicsmagick  \
                              xz-utils        \
                              build-essential \
                              libudev-dev
  
  
  
  build-macos:
    runs-on: macos-latest
  
    steps:
    - uses: actions/checkout@v2
    - run: sw_vers
  
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - uses: olegtarasov/get-tag@v2
  #     id: tag_name
  #   - run: npm install
  #   - run: npm run test-build
  #     if: ${{ !steps.tag_name.outputs.tag }}
  #   - run: npm run release
  #     if: ${{ steps.tag_name.outputs.tag }}
  #     env:
  #       GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  #       CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
  #       CSC_LINK: "${{ secrets.CSC_LINK }}"
  
  build-windows:
    runs-on: windows-latest
  
    steps:
    - uses: actions/checkout@v2
    - run: systeminfo
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - uses: olegtarasov/get-tag@v2
  #     id: tag_name
  #   - run: npm install
  #   - run: npm run test-build
  #     if: ${{ !steps.tag_name.outputs.tag }}
  #   - run: npm run release
  #     if: ${{ steps.tag_name.outputs.tag }}
  #     env:
  #       GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  
  # 
  # /home/logic/_workspace/github-playlist/actions-react-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  # https://github.com/sdras/awesome-actions
  
  actions_react_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: github-actions-helloworld-tryout
        uses: actions/checkout@v2
  
      - name: actions-react-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd actions-react-tryout
            yarn
            yarn test
            yarn build
          cd ..
  
  # 
  # /home/logic/_workspace/github-playlist/build-dashboard-tryout/build.yml
  # 
  build-dashboard-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - run: |
          cd build-dashboard-tryout
            yarn
            yarn test
            yarn build --prefix-paths --verbose
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-add-and-commit-tryout/build.yml
  # 
  github_actions_add_and_commit_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'master'
          repository: 'louiscklaw/github-playlist'
          path: "QA_test_result"
  
      - name: run test
        run: |
          echo 1 > QA_test_result/helloworld.txt
          ls -l QA_test_result
  
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          author_name: louiscklaw
          author_email: louiscklaw@gmail.com
          message: "update routine result"
          cwd: "QA_test_result"
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-checkout-orphan-branch-tryout/build.yml
  # 
  github-actions-checkout-orphan-branch-tryout:
    runs-on: ubuntu-latest
    steps:
  
      # NOTES: actions/checkout will clear every and then checkout, so must define path for each branch, sequences are matters
  
      - uses: actions/checkout@v2
        with:
          ref: master
          path: 'master'
      - uses: actions/checkout@v2
        with:
          ref: test_orphan_branch
          path: 'master/test_orphan_branch'
  
      - name: github-actions-checkout-orphan-branch-tryou
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'helloworld'
          ls -l .
          ls -l ..
          ls -l master/test_orphan_branch
  
          cd master/test_orphan_branch
            touch hello_orphan_branch
            git config --global user.email "louiscklaw@github.com"
            git config --global user.name "louiscklaw"
  
            git add hello_orphan_branch
            git commit -m"test commit using command line," | true
            git push | true
          cd ..
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-docker-container-tryout/build.yml
  # 
  # github_actions_docker_container:
  #   runs-on: ubuntu-latest
  #   container: node:10.16-jessie
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: github_actions_docker_container
  #       env: # Or as an environment variable
  #         SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  #       run: |
  #         echo 'helloworld'
  #         hostname
  #         node -v
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-firebase-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  # https://github.com/sdras/awesome-actions
  
  github-actions-firebase-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - run: |
          cd github-actions-firebase-tryout
            curl -Lo ./firebase_bin https://firebase.tools/bin/linux/latest
            chmod +x ./firebase_bin
            ./firebase_bin --help
  
            echo 'helloworld'
            node --version
            npm -v
            yarn -v
            ./firebase_bin --help
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # 
  # /home/logic/_workspace/github-playlist/github-actions-long-duration-tryout/build.yml
  # 
  github-actions-long-duration-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: sleep 1800
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-multistage-tryout/build.yml
  # 
  github-actions-multistage-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: github-actions-multistage-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          echo 'helloworld'
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-orphan-tryout/build.yml
  # 
  github-actions-orphan-tryout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false
  
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@3.6.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: hello-orphans # The branch the action should deploy to.
          FOLDER: github-actions-orphan-tryout/out # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
  
  # 
  # /home/logic/_workspace/github-playlist/github-actions-puppeteer-tryout/build.yml
  # 
  puppeteer_helloworld:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: github-actions-puppeteer-tryout
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          cd github-actions-puppeteer-tryout
            sudo npm install -g concurrently live-server
            yarn
            concurrently -s first -k "live-server --no-browser ." "node index.js"
          cd ..
  
  # 
  # /home/logic/_workspace/github-playlist/github-environ-tryout/build.yml
  # 
  github_environ_tryout:
    runs-on: ubuntu-latest
    steps:
      - name: Hello world
        run: |
          echo $CI
          echo $HOME
          echo $GITHUB_WORKFLOW
          echo $GITHUB_RUN_ID
          echo $GITHUB_RUN_NUMBER
          echo $GITHUB_ACTION
          echo $GITHUB_ACTIONS
          echo $GITHUB_ACTOR
          echo $GITHUB_REPOSITORY
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_EVENT_PATH
          echo $GITHUB_WORKSPACE
          echo $GITHUB_SHA
          echo $GITHUB_REF
          echo $GITHUB_HEAD_REF
          echo $GITHUB_BASE_REF
          echo $GITHUB_SERVER_URL
          echo $GITHUB_API_URL
          echo $GITHUB_GRAPHQL_URL
  
  # 
  # /home/logic/_workspace/github-playlist/github-lighthouse-tryout/build.yml
  # 
  # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
  # https://github.com/sdras/awesome-actions
  
  github-lighthouse-tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - run: |
          yarn add global lighthouse
          lighthouse https://airhorner.com
  
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # 
  # /home/logic/_workspace/github-playlist/python-helloworld-tryout/build.yml
  # 
  python_helloworld_tryout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test python helloworld
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd python-helloworld-tryout
            pipenv sync
            pipenv run python3 ./helloworld.py
  
  

  # 
  # /home/logic/_workspace/github-playlist/github-build-merger-tryout/subjob.yml
  # 
  test_merger:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run test
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          pipenv --help
          github-build-merger-tryout/test.sh
  
  merge:
    needs: [action_secrets_tryout, action_slack_custom_message_tryout, action_upload_artifact_tryout, actions_react_tryout, build-dashboard-tryout, build-linux, build-macos, build-windows, github-actions-checkout-orphan-branch-tryout, github-actions-firebase-tryout, github-actions-long-duration-tryout, github-actions-multistage-tryout, github-actions-orphan-tryout, github-lighthouse-tryout, github_actions_add_and_commit_tryout, github_actions_helloworld_tryout, github_environ_tryout, puppeteer_helloworld, python_helloworld_tryout, test_merger]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
  
      - name: run merge
        env: # Or as an environment variable
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
  
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-dev python3-wheel python3-setuptools
          python3 -V
          python3 -m pip install pipenv
  
          export PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"
  
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
  
          cd github-build-merger-tryout
            pipenv sync
  
            pipenv run python3 ./merge.py
          cd ..
  
  
